#Velocity\HeaderContent Related APIs
extend type Query {
    headerContents(input: FilterContentInput @builder(method: "Webkul\\GraphQLAPI\\Queries\\Velocity\\FilterContent")): [HeaderContent!] @paginate(type: "paginator" defaultCount:10 model: "Webkul\\Velocity\\Models\\Content")
    headerContent(id: ID @eq): HeaderContent @find(model: "Webkul\\Velocity\\Models\\Content")

    contentTranslations: [ContentTranslation!] @paginate(type: "paginator" defaultCount:10 model: "Webkul\\Velocity\\Models\\ContentTranslation")
    contentTranslation(id: ID @eq): ContentTranslation @find(model: "Webkul\\Velocity\\Models\\ContentTranslation")
}

extend type Mutation {
    createHeaderContent(
        input: CreateHeaderContentInput!
    ): HeaderContent  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Velocity\\HeaderContentMutation@store")
    updateHeaderContent(
        id: ID!,
        input: CreateHeaderContentInput!
    ): HeaderContent  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Velocity\\HeaderContentMutation@update")
    deleteHeaderContent (id: ID!): HeaderContent  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Velocity\\HeaderContentMutation@delete")
}

input CreateHeaderContentInput {
    title: String!
    position: Int!
    status: Boolean!
    contentType: String! @rename(attribute: "content_type")
    locale: String
    pageLink: String! @rename(attribute: "page_link")
    linkTarget: Boolean! @rename(attribute: "link_target")
}

input FilterContentInput {
    id: Int
    contentType: String @rename(attribute: "content_type")
    position: Int
    status: Boolean
    title: String
}

type HeaderContent {
    id: ID!
    contentType: String! @rename(attribute: "content_type")
    position: Int!
    status: Boolean!
    translations: [ContentTranslation!] @hasMany
    success: String
}

type ContentTranslation{
    id: ID!
    contentId: ID! @rename(attribute: "content_id")
    title: String
    customTitle: String @rename(attribute: "custom_title")
    customHeading: String @rename(attribute: "custom_heading")
    pageLink: String @rename(attribute: "page_link")
    linkTarget: Boolean! @rename(attribute: "link_target")
    catalogType: String @rename(attribute: "catalog_type")
    products: String
    description: String
    locale: String
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    content: HeaderContent! @belongsTo(relation: "content")
}